name: Build and Release

permissions:
  contents: write

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 22 * * 2'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-22.04

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3
      
      # 设置 .NET 环境
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.204'
      
      # 恢复依赖项
      - name: Restore dependencies
        run: dotnet restore
      
      # 编译项目
      - name: Build project
        run: dotnet build --configuration Release
      
      # 运行项目
      - name: Run compiled executable
        run: |
          chmod +x ./CreateBangumiDatabase/bin/Release/net8.0/CreateBangumiDatabase
          ./CreateBangumiDatabase/bin/Release/net8.0/CreateBangumiDatabase
      # 打包运行后的文件
      - name: Archive output
        run: |
          mkdir Release
          zip -r Release/BangumiArchive.zip /home/runner/work/CreateBangumiDatabase/CreateBangumiDatabase/BangumiArchive.db
          
      - name: Fetch JSON and extract release name
        id: fetch_json
        run: |
          curl -sSL https://raw.githubusercontent.com/bangumi/Archive/refs/heads/master/aux/latest.json -o latest.json
          RELEASE_NAME=$(jq -r '.updated_at' latest.json)
          echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_ENV
          
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   with:
      #     tag_name: ${{ github.ref_name }}
      #     release_name: ${{ env.RELEASE_NAME }}
      #     draft: false
      #     prerelease: false
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: false
          files: ./Release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload multiple files
      #   run: |
      #     for file in Release/*; do
      #       echo "Uploading $file"
      #       gh release upload "${{ steps.create_release.outputs.upload_url }}" "$file" --clobber
      #     done
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
