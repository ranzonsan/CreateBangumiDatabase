// <auto-generated />
using CreateBangumiDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreateBangumiDatabase.Migrations
{
    [DbContext(typeof(BangumiArchiveDbContext))]
    [Migration("20250420043656_ChangeRelationsToDoubleKey")]
    partial class ChangeRelationsToDoubleKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("CreateBangumiDatabase.BangumiArchiveDatabaseModels+ArchiveDatabaseInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Browser_Download_Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content_Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Created_At")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Node_Id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Updated_At")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ArchiveDatabaseInfo");
                });

            modelBuilder.Entity("CreateBangumiDatabase.BangumiArchiveDatabaseModels+Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Collects")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Comments")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InfoBox")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("CreateBangumiDatabase.BangumiArchiveDatabaseModels+Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Disc")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name_Cn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Subject_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Episode");
                });

            modelBuilder.Entity("CreateBangumiDatabase.BangumiArchiveDatabaseModels+Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Carrer")
                        .HasColumnType("TEXT");

                    b.Property<int>("Collects")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Comments")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InfoBox")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("CreateBangumiDatabase.BangumiArchiveDatabaseModels+PersonCharacter", b =>
                {
                    b.Property<int>("Person_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Character_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Subject_Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Person_Id", "Character_Id");

                    b.ToTable("PersonCharacter");
                });

            modelBuilder.Entity("CreateBangumiDatabase.BangumiArchiveDatabaseModels+Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Favorite_Json")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InfoBox")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("NSFW")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name_Cn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Platform")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<string>("Score_Details_Json")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Series")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags_Json")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("CreateBangumiDatabase.BangumiArchiveDatabaseModels+SubjectCharacter", b =>
                {
                    b.Property<int>("Character_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Subject_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Character_Id", "Subject_Id");

                    b.ToTable("SubjectCharacter");
                });

            modelBuilder.Entity("CreateBangumiDatabase.BangumiArchiveDatabaseModels+SubjectPerson", b =>
                {
                    b.Property<int>("Subject_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Person_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.HasKey("Subject_Id", "Person_Id");

                    b.ToTable("SubjectPerson");
                });

            modelBuilder.Entity("CreateBangumiDatabase.BangumiArchiveDatabaseModels+SubjectRelation", b =>
                {
                    b.Property<int>("Subject_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Related_Subject_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Relation_Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Subject_Id", "Related_Subject_Id");

                    b.ToTable("SubjectRelation");
                });
#pragma warning restore 612, 618
        }
    }
}
